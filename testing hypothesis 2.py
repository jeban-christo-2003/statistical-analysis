# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Whme7bOVR_FvhIh-4uVfx5BBF2TDTBJ8
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import stats

# Generate sample data for 50 employees
np.random.seed(0)
employee_ids = range(101, 151)
employee_names = ['Employee_' + str(i) for i in range(1, 51)]
salaries = np.random.randint(50000, 100000, size=50)
profits = np.random.randint(70000, 150000, size=50)
rnd_expenses = np.random.randint(20000, 50000, size=50)
work_expenses = np.random.randint(25000, 60000, size=50)

# Create DataFrame
data = {
    'Employee ID': employee_ids,
    'Employee Name': employee_names,
    'Salary': salaries,
    'Profit': profits,
    'Research & Development': rnd_expenses,
    'Work': work_expenses
}

df = pd.DataFrame(data)

# Calculate profit contributed by each person
df['Profit_Contributed'] = df['Profit'] - df['Research & Development'] - df['Work']

# Display DataFrame
print(df)

df.head()

df.shape

df.info()

# Perform two-tailed t-test for scenario 2
t_stat_two_tailed, p_value_two_tailed = stats.ttest_ind(df.Salary, df.Profit)

print("\nTwo-tailed Test Results ")
print("t-statistic:", t_stat_two_tailed)
print("p-value:", p_value_two_tailed)

# Interpretation
alpha = 0.05  # significance level
if p_value_two_tailed < alpha:
    print("Reject null hypothesis:.")
else:
    print("Fail to reject null hypothesis:")

